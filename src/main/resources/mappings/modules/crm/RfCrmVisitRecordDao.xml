<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.crm.visit.dao.RfCrmVisitRecordDao">
    
	<sql id="rfCrmVisitRecordColumns">
		a.id AS "id",
		a.visit_hotel_id AS "visitHotelId",
		a.visit_type AS "visitType",
		a.visit_way AS "visitWay",
		a.visit_hotel_intention AS "visitHotelIntention",
		a.hotel_contacts AS "hotelContacts",
		a.visit_user AS "visitUser",
		a.visit_desc AS "visitDesc",
		a.visit_status AS "visitStatus",
		a.visit_time AS "visitTime",
		a.create_time AS "createTime",
		a.update_time AS "updateTime",
		a.sample_grant AS "sampleGrant",
		a.purchase_intention AS "purchaseIntention",
		a.is_sign AS "isSign",
		a.longitude AS "longitude",
		a.latitude AS "latitude",
		a.lbs_address AS "lbsAddress",
		a.pics AS "pics",
		a.wash_intention AS "washIntention",
		a.wash_sign AS "washSign",
		a.wash_sign_date AS "washSignDate",

		h.hotel_name as "visitHotelName",
		u.USER_NAME as "visitUserName",
		t.value_label as "visitTypeName",
		w.value_label as "visitWayName",
		g.value_label as "sampleGrantName",
		h.prov_code AS "provCode",
		h.city_code AS "cityCode",
		h.dis_code AS "disCode",
		p.ProName AS "provName",
		c.CityName AS "cityName",
		d.DisName AS "disName",
		b.reject_reason AS "signFailure",

	max(case when b.reject_reason_code = 1 then b.reject_reason when b.reject_reason_code != 1 then '' END) as 'yaju',
	max(case when b.reject_reason_code = 2 then b.reject_reason when b.reject_reason_code != 2 then '' END) as 'muyulu',
	max(case when b.reject_reason_code = 3 then b.reject_reason when b.reject_reason_code != 3 then '' END) as 'xiangzao',
	max(case when b.reject_reason_code = 4 then b.reject_reason when b.reject_reason_code != 4 then '' END) as 'xifaye',
	max(case when b.reject_reason_code = 5 then b.reject_reason when b.reject_reason_code != 5 then '' END) as 'shuzi',
	max(case when b.reject_reason_code = 6 then b.reject_reason when b.reject_reason_code != 6 then '' END) as 'shui',
	max(case when b.reject_reason_code = 7 then b.reject_reason when b.reject_reason_code != 7 then '' END) as 'zhi',
	max(case when b.reject_reason_code = 8 then b.reject_reason when b.reject_reason_code != 8 then '' END) as 'lajidai'
	</sql>
	<!--p.value_label as "purchaseIntentionName",-->

	<sql id="rfCrmVisitRecordJoins">
	</sql>

	<sql id="rfCrmVisitRecord_convert_Joins">
		left JOIN rf_crm_hotel h on a.visit_hotel_id = h.id
		left join sy_org_user u on a.visit_user = u.USER_CODE
		left JOIN rf_crm_sys_label t on a.visit_type = t.key_label and t.code_label='visit_type'
		left JOIN rf_crm_sys_label w on a.visit_way = w.key_label and w.code_label='visit_way'
		left JOIN rf_crm_sys_label g on a.sample_grant = g.key_label and g.code_label='sample_grant'
		LEFT JOIN t_province p ON h.prov_code = p.code
		LEFT JOIN t_city c ON h.city_code = c.code
		LEFT JOIN t_district d ON h.dis_code = d.code
		LEFT JOIN rf_crm_unvisit_reason b on a.id = b.record_id
	</sql>
	<!--left JOIN rf_crm_sys_label p on a.purchase_intention = p.key_label and w.code_label='purchase_intention'-->

	<select id="get" resultType="RfCrmVisitRecord">
		SELECT 
			<include refid="rfCrmVisitRecordColumns"/>
		FROM rf_crm_visit_record a
		<include refid="rfCrmVisitRecordJoins"/>
		<include refid="rfCrmVisitRecord_convert_Joins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="RfCrmVisitRecord">
		SELECT 
			<include refid="rfCrmVisitRecordColumns"/>
		FROM rf_crm_visit_record a
		<include refid="rfCrmVisitRecordJoins"/>
		<include refid="rfCrmVisitRecord_convert_Joins"/>
		<where>
			a.visit_hotel_id NOT IN (47923,47938,50099,50147,50148,50149,50162,50174,50176,50177,50178,50179,50185,50186,50196,50197,50198,50199,50200,50201,50203,50204,50205,50206,50207,50208,50209)
			<if test="visitHotelId != null and visitHotelId != ''">
				AND a.visit_hotel_id = #{visitHotelId}
			</if>
			<if test="visitHotelName != null and visitHotelName != ''">
				AND h.hotel_name like CONCAT('%', #{visitHotelName}, '%')
			</if>
			<if test="visitType != null and visitType != ''">
				AND a.visit_type = #{visitType}
			</if>
			<if test="visitWay != null and visitWay != ''">
				AND a.visit_way = #{visitWay}
			</if>
			<if test="visitHotelIntention != null and visitHotelIntention != ''">
				AND a.visit_hotel_intention = #{visitHotelIntention}
			</if>
			<if test="hotelContacts != null and hotelContacts != ''">
				AND a.hotel_contacts = #{hotelContacts}
			</if>
			<!--<if test="visitUser != null and visitUser != ''">-->
				<!--AND a.visit_user = #{visitUser}-->
			<!--</if>-->
            <if test="visitUsers != null">
                AND a.visit_user in
                <foreach collection="visitUsers" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
			<!--<if test="visitUserName != null and visitUserName != ''">-->
				<!--AND u.USER_NAME like CONCAT('%', #{visitUserName}, '%')-->
			<!--</if>-->
			<if test="visitDesc != null and visitDesc != ''">
				AND a.visit_desc = #{visitDesc}
			</if>
			<if test="visitStatus != null and visitStatus != ''">
				AND a.visit_status = #{visitStatus}
			</if>
			<if test="visitTime != null and visitTime != ''">
				AND DATE (a.visit_time) &gt;=  #{visitTime}
			</if>
			<if test="visitTimeEnd != null and visitTimeEnd != ''">
				AND DATE (a.visit_time) &lt;= #{visitTimeEnd}
			</if>
			<if test="createTime != null and createTime != ''">
				AND a.create_time = #{createTime}
			</if>
			<if test="updateTime != null and updateTime != ''">
				AND a.update_time = #{updateTime}
			</if>
			<if test="sampleGrant != null and sampleGrant != ''">
				AND a.sample_grant = #{sampleGrant}
			</if>
			<if test="purchaseIntention != null and purchaseIntention != ''">
				AND a.purchase_intention = #{purchaseIntention}
			</if>
			<if test="isSign != null and isSign != ''">
				AND a.is_sign = #{isSign}
			</if>
			<if test="washIntention != null and washIntention != ''">
				AND a.wash_intention = #{washIntention}
			</if>
			<if test="washSign != null and washSign != ''">
				AND a.wash_sign = #{washSign}
			</if>
			<if test="provCode != null and provCode != ''">
				AND h.prov_code = #{provCode}
			</if>
			<if test="cityCode != null and cityCode != ''">
				AND h.city_code = #{cityCode}
			</if>
			<if test="disCode != null and disCode != ''">
				AND h.dis_code = #{disCode}
			</if>
			<if test="washSignDate != null and washSignDate != ''">
				AND DATE (a.wash_sign_date) &gt;=  #{washSignDate}
			</if>
			<if test="washSignDateEnd != null and washSignDateEnd != ''">
				AND DATE (a.wash_sign_date) &lt;= #{washSignDateEnd}
			</if>
		</where>
		group by a.id
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="RfCrmVisitRecord">
		SELECT 
			<include refid="rfCrmVisitRecordColumns"/>
		FROM rf_crm_visit_record a
		<include refid="rfCrmVisitRecordJoins"/>
		<include refid="rfCrmVisitRecord_convert_Joins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO rf_crm_visit_record(
			id,
			visit_hotel_id,
			visit_type,
			visit_way,
			visit_hotel_intention,
			hotel_contacts,
			visit_user,
			visit_desc,
			visit_status,
			visit_time,
			create_time,
			update_time,
			sample_grant,
			is_sign,
			purchase_intention
		) VALUES (
			#{id},
			#{visitHotelId},
			#{visitType},
			#{visitWay},
			#{visitHotelIntention},
			#{hotelContacts},
			#{visitUser},
			#{visitDesc},
			#{visitStatus},
			#{visitTime},
			#{createTime},
			#{updateTime},
			#{sampleGrant},
			#{isSign},
			#{purchaseIntention}
		)
	</insert>
	
	<update id="update">
		UPDATE rf_crm_visit_record SET 	
			visit_hotel_id = #{visitHotelId},
			visit_type = #{visitType},
			visit_way = #{visitWay},
			visit_hotel_intention = #{visitHotelIntention},
			hotel_contacts = #{hotelContacts},
			visit_user = #{visitUser},
			visit_desc = #{visitDesc},
			visit_status = #{visitStatus},
			visit_time = #{visitTime},
			create_time = #{createTime},
			update_time = #{updateTime},
			sample_grant = #{sampleGrant},
			is_sign = #{isSign},
			purchase_intention = #{purchaseIntention}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM rf_crm_visit_record
		WHERE id = #{id}
	</update>
	
</mapper>