<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.gds.hotel.dao.HotelDao">
    
	<sql id="hotelColumns">
		a.id AS "id",
		a.hotelname AS "hotelname",
		a.hotelcontactname AS "hotelcontactname",
		a.regtime AS "regtime",
		a.detailaddr AS "detailaddr",
		a.opentime AS "opentime",
		a.repairtime AS "repairtime",
		a.roomnum AS "roomnum",
		a.introduction AS "introduction",
		a.businesslicensefront AS "businesslicensefront",
		a.businesslicenseback AS "businesslicenseback",
		a.hotelpms AS "hotelpms",
		a.isvisible AS "isvisible",
		a.isonline AS "isonline",
		a.idcardfront AS "idcardfront",
		a.idcardback AS "idcardback",
		a.retentiontime AS "retentiontime",
		a.defaultleavetime AS "defaultleavetime",
		a.hotelphone AS "hotelphone",
		a.hoteltype AS "hoteltype",
		a.discode AS "discode",
		a.qtphone AS "qtphone",
		a.citycode AS "citycode",
		a.provcode AS "provcode",
		a.pmstype AS "pmstype",
		a.isonlinetime AS "isonlinetime",
		a.hotelfax AS "hotelfax",
		a.longitude AS "longitude",
		a.latitude AS "latitude",
		a.state AS "state",
		s.distribution AS "switchOpen",
		s.distribution_createtime AS "switchcreatetime"
	</sql>

	<sql id="crmHotelColumns">
		otsa.pms_on_line AS "pmsOnLine",
		otsa.on_line AS "onLine",
		otsa.hotel_status AS "hotelStatus",
		otsa.street AS "street",
		otsa.room_type_num AS "roomTypeNum",
		otsa.available AS "available",
		otsa.is_healthy AS "isHealthy",
		otsa.update_time AS "updateTime",
		otsa.wash_cooperate AS "washCooperate",
		otsa.distribut_cooperate AS "distributCooperate",
		otsa.supply_cooperate AS "supplyCooperate",
		hp.is_private AS "isPrivate",
		hp.start_time AS "startTime",
		hp.hotel_user_id hotelUserId,
		o.user_name AS "salesName",
		o.user_mobile AS "salesMobile",
		hu.boss_name AS "bossName",
		hu.boss_mobile AS "bossMobile",
		hu.pmsUser AS "pmsUser",
		hu.isSelfBuildHotel AS "isSelfBuildHotel",
		sou.user_name AS "pmsUserName",
		mu.name AS "psbUserName",
		p.ProName AS "provName",
		c.CityName AS "cityName",
		d.DisName AS "disName",
		MIN(oold.on_off_time) AS "onLineTime"
	</sql>
	
	<sql id="hotelJoins">
	   left join hotel_business s on a.id = s.hotelid and <![CDATA[ a.state>=0 ]]>
	</sql>
	<sql id="crmHotelJoins">
		LEFT JOIN ots.rf_crm_hotel otsa ON a.id=otsa.id
		LEFT JOIN ots.rf_crm_hotel_public hp ON otsa.id = hp.hotel_id
		LEFT JOIN ots.sy_org_user o ON hp.hotel_user_id = o.USER_CODE
		LEFT JOIN ots.t_province p ON otsa.prov_code = p. CODE
		LEFT JOIN ots.t_city c ON otsa.city_code = c. CODE
		LEFT JOIN ots.t_district d ON otsa.dis_code = d. CODE
		LEFT JOIN ots.on_off_line_detail oold ON a.id = oold.hotel_id AND oold.type = 1 
		LEFT JOIN (
			SELECT
				e.id AS hotelid,
				e.pmsUser as pmsUser,
				e.isSelfBuildHotel AS isSelfBuildHotel,
				hu.loginname AS boss_mobile,
				hu.`name` AS boss_name
			FROM
				ots.e_hotel e
			INNER JOIN ots.h_role hr ON e.id = hr.hotelid
			AND hr.type = 1
			INNER JOIN ots.h_user_role hur ON hur.roleid = hr.id
			INNER JOIN ots.h_user hu ON hur.userid = hu.id
		) hu ON otsa.id = hu.hotelid
		LEFT JOIN (select * from ots.sy_org_user GROUP BY USER_MOBILE) sou ON sou.user_mobile = hu.pmsUser
		LEFT JOIN (select * from ots.m_user GROUP BY loginname)  mu ON mu.loginname = hu.pmsUser
	</sql>

	<sql id="crmHotelIf">
		<if test="pmsOnLine != null and pmsOnLine != ''">
			AND a.pms_on_line = #{pmsOnLine}
		</if>
		<if test="onLine != null and onLine != ''">
			AND a.on_line = #{onLine}
		</if>
		<if test="hotelStatus != null and hotelStatus != ''">
			AND a.hotel_status = #{hotelStatus}
		</if>
		<if test="street != null and street != ''">
			AND a.street = #{street}
		</if>
		<if test="roomTypeNum != null and roomTypeNum != ''">
			AND a.room_type_num = #{roomTypeNum}
		</if>
		<if test="available != null and available != ''">
			AND a.available = #{available}
		</if>
		<if test="isHealthy != null and isHealthy != ''">
			AND a.is_healthy = #{isHealthy}
		</if>
		<if test="createTime != null and createTime != ''">
			AND a.create_time = #{createTime}
		</if>
		<if test="updateTime != null and updateTime != ''">
			AND a.update_time = #{updateTime}
		</if>
		<if test="washCooperate != null and washCooperate != ''">
			AND a.wash_cooperate = #{washCooperate}
		</if>
		<if test="distributCooperate != null and distributCooperate != ''">
			AND a.distribut_cooperate = #{distributCooperate}
		</if>
		<if test="supplyCooperate != null and supplyCooperate != ''">
			AND a.supply_cooperate = #{supplyCooperate}
		</if>
		<if test="salesName != null and salesName != ''">
			AND o.user_name = #{salesName}
		</if>
		<if test="salesMobile != null and salesMobile != ''">
			AND o.user_mobile = #{salesMobile}
		</if>
		<if test="isPrivate != null and isPrivate != ''">
			AND hp.is_private = #{isPrivate}
		</if>
		<if test="pmsUser != null and pmsUser != ''">
			AND hu.pmsUser = #{pmsUser}
		</if>
		<if test="isSelfBuildHotel != null and isSelfBuildHotel != ''">
			AND hu.isSelfBuildHotel = #{isSelfBuildHotel}
		</if>
		<if test="pmsUserName != null and pmsUserName != ''">
			AND sou.user_name = #{pmsUserName}
		</if>
	</sql>
    
	<select id="get" resultType="Hotel">
		SELECT 
			<include refid="hotelColumns"/>
		FROM hotel a
		<include refid="hotelJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Hotel">
		SELECT 
			<include refid="hotelColumns"/>,
			<include refid="crmHotelColumns"/>
		FROM hotel a
			<include refid="hotelJoins"/>
			<include refid="crmHotelJoins"/>
		<where>
			<if test="ids != null and ids != '' and ids.size()>0">
				AND a.id in  
				<foreach collection="ids"  item="id" separator="," open="(" close=")">
                    #{id}
                </foreach>  <!-- = #{id}  (${id}) -->
			</if>
			<if test="hotelname != null and hotelname != ''">
				AND a.hotelname LIKE 
					<if test="dbName == 'oracle'">'%'||#{hotelname}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{hotelname}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{hotelname},'%')</if>
			</if>
			<if test="detailaddr != null and detailaddr != ''">
				AND a.detailaddr LIKE
				<if test="dbName == 'oracle'">'%'||#{detailaddr}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{detailaddr}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{detailaddr},'%')</if>
			</if>
			<if test="hotelcontactname != null and hotelcontactname != ''">
				AND a.hotelcontactname = #{hotelcontactname}
			</if>
			<if test="qtphone != null and qtphone != ''">
				AND a.qtphone = #{qtphone}
			</if>
			<if test="discode != null and discode != ''">
				AND a.discode = #{discode}
			</if>
			<if test="citycode != null and citycode != ''">
				AND a.citycode = #{citycode}
			</if>
			<if test="provcode != null and provcode != ''">
				AND a.provcode = #{provcode}
			</if>
			<if test="hotelpms != null and hotelpms != ''">
				AND a.hotelpms = #{hotelpms}
			</if>
			 <if test="roomcountbegin != null">
				AND a.roomnum &gt;= #{roomcountbegin}
			</if>
			<if test="roomcountend != null">
				AND a.roomnum &lt;= #{roomcountend}
			</if> 
			
			<if test="switchcreatetime != null and switchcreatetime != ''">
				AND date_format(s.distribution_createtime,'%Y-%m-%d') &gt;= date_format(#{switchcreatetime},'%Y-%m-%d')
			</if>
			<if test="switchcreatetimeEnd != null and switchcreatetimeEnd != ''">
				AND date_format(s.distribution_createtime,'%Y-%m-%d') &lt;= date_format(#{switchcreatetimeEnd},'%Y-%m-%d')
			</if>
			<if test="switchOpen != null and switchOpen != ''">
				<!-- <if test="switchOpen == 'T'.toString() ">
					AND s.distribution &gt; 10
				</if> -->
				AND  s.distribution = #{switchOpen}
			</if>
            <if test="isvisible != null and isvisible != ''">
            	<if test="isvisible == 'F'.toString() ">
            		<![CDATA[AND (a.isvisible = #{isvisible} OR a.state <= 3)]]>
				</if>
				<if test="isvisible == 'T'.toString() ">
                	<![CDATA[AND  a.isvisible = #{isvisible} AND a.state > 3]]>
				</if>
            </if>
            <if test="isonline != null and isonline != ''">
                AND  a.isonline = #{isonline}
            </if>
			<include refid="crmHotelIf"/>
		</where>
		group by a.id
		<if test="(startOnLineTime != null and startOnLineTime != '') or (endOnlineTime != null and endOnlineTime != '')">
			HAVING
			<if test="startOnLineTime != null and startOnLineTime != ''">
				<![CDATA[date_format(onLineTime,'%Y-%m-%d') >= date_format(#{startOnLineTime},'%Y-%m-%d')]]>
			</if>
			<if test="(startOnLineTime != null and startOnLineTime != '') and (endOnlineTime != null and endOnlineTime != '')">
				AND
			</if>
			<if test="endOnlineTime != null and endOnlineTime != ''">
				<![CDATA[ date_format(onLineTime,'%Y-%m-%d') <= date_format(#{endOnlineTime},'%Y-%m-%d')]]>
			</if>
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		
	</select>
	
	<select id="findAllList" resultType="Hotel">
		SELECT
			<include refid="hotelColumns"/>,
			<include refid="crmHotelColumns"/>
		FROM hotel a
			<include refid="hotelJoins"/>
			<include refid="crmHotelJoins"/>
		<where>
			
		</where>
		group by a.id
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO hotel(
			id,
			hotelname,
			hotelcontactname,
			regtime,
			detailaddr,
			opentime,
			repairtime,
			roomnum,
			introduction,
			businesslicensefront,
			businesslicenseback,
			hotelpms,
			isvisible,
			isonline,
			idcardfront,
			idcardback,
			retentiontime,
			defaultleavetime,
			hotelphone,
			hoteltype,
			discode,
			qtphone,
			citycode,
			provcode,
			pmstype,
			isonlinetime,
			hotelfax,
			state,
			longitude,
			latitude
		) VALUES (
			#{id},
			#{hotelname},
			#{hotelcontactname},
			#{regtime},
			#{detailaddr},
			#{opentime},
			#{repairtime},
			#{roomnum},
			#{introduction},
			#{businesslicensefront},
			#{businesslicenseback},
			#{hotelpms},
			#{isvisible},
			#{isonline},
			#{idcardfront},
			#{idcardback},
			#{retentiontime},
			#{defaultleavetime},
			#{hotelphone},
			#{hoteltype},
			#{discode},
			#{qtphone},
			#{citycode},
			#{provcode},
			#{pmstype},
			#{isonlinetime},
			#{hotelfax},
			#{state},
			#{longitude},
			#{latitude}
		)
	</insert>
	
	<update id="update">
		UPDATE hotel SET 	
			hotelname = #{hotelname},
			hotelcontactname = #{hotelcontactname},
			regtime = #{regtime},
			detailaddr = #{detailaddr},
			opentime = #{opentime},
			repairtime = #{repairtime},
			roomnum = #{roomnum},
			introduction = #{introduction},
			businesslicensefront = #{businesslicensefront},
			businesslicenseback = #{businesslicenseback},
			hotelpms = #{hotelpms},
			isvisible = #{isvisible},
			isonline = #{isonline},
			idcardfront = #{idcardfront},
			idcardback = #{idcardback},
			retentiontime = #{retentiontime},
			defaultleavetime = #{defaultleavetime},
			hotelphone = #{hotelphone},
			hoteltype = #{hoteltype},
			discode = #{discode},
			qtphone = #{qtphone},
			citycode = #{citycode},
			provcode = #{provcode},
			pmstype = #{pmstype},
			isonlinetime = #{isonlinetime},
			hotelfax = #{hotelfax},
			state = #{state},
			longitude = #{longitude},
			latitude = #{latitude}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM hotel
		WHERE id = #{id}
	</update>
	<!-- 退回到公海 -->
	<update id="returnPublicByUser" parameterType="map">
		UPDATE ots.rf_crm_hotel_public 
		SET hotel_user_id = null,
		is_private = #{isPrivate},
		update_time = #{updateTime},
		return_time = #{returnTime}
		WHERE hotel_user_id = #{hotelUserId} AND hotel_id = #{hotelId}
	</update>
	<!-- 酒店转到另一个销售名下 -->
	<update id="transferHotelToSeller" parameterType="map">
		UPDATE ots.rf_crm_hotel_public 
		SET hotel_user_id = #{sellId},
		update_time = #{updateTime},
		return_time = #{returnTime}
		WHERE hotel_user_id = #{hotelUserId} AND hotel_id = #{hotelId}
	</update>
	
	<!-- 公海酒店批量分配销售 -->
	<update id="assignHotelToSeller" parameterType="map">
		UPDATE ots.rf_crm_hotel_public 
		SET hotel_user_id = #{sellId},
		update_time = #{updateTime},
		return_time = #{returnTime}
		WHERE hotel_id = #{hotelId}
	</update>
</mapper>